{"ast":null,"code":"var _jsxFileName = \"/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Event from \"./Event.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [events, setEvents] = React.useState([]);\n  React.useEffect(() => {\n    let url = \"https://adonix.hackillinois.org/event/\";\n    fetch(url).then(response => response.json()).then(data => {\n      setEvents(data.events);\n    }).catch(error => {\n      console.log(\"Error fetching event data:\", error);\n    });\n  }, []);\n  if (events.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    return date.toLocaleDateString('en-US'); // Format as MM/DD/YYYY (adjust the locale as needed)\n  };\n\n  // Render the schedule data here\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n        id: event.id,\n        name: event.name,\n        description: event.description,\n        startTime: event.startTime,\n        endTime: event.endTime,\n        locations: event.locations,\n        date: formatDate(event.startTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","Event","jsxDEV","_jsxDEV","Schedule","_s","events","setEvents","useState","useEffect","url","fetch","then","response","json","data","catch","error","console","log","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","formatDate","timestamp","date","Date","toLocaleDateString","map","event","id","name","description","startTime","endTime","locations","_c","$RefreshReg$"],"sources":["/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js"],"sourcesContent":["import React from 'react';\nimport Event from \"./Event.js\"\nexport default function Schedule() {\n  const [events, setEvents] = React.useState([]);\n  \n  React.useEffect(() => {\n    let url = \"https://adonix.hackillinois.org/event/\";\n    fetch(url)\n        .then((response) => response.json())\n        .then((data) => {setEvents(data.events)})\n        .catch((error) => {\n            console.log(\"Error fetching event data:\", error);\n        })\n  }, [])\n\n  if (events.length === 0) {\n    return (\n      <div className=\"loading\">\n        <h1>Loading...</h1>\n      </div>\n    );\n  }\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    return date.toLocaleDateString('en-US'); // Format as MM/DD/YYYY (adjust the locale as needed)\n  };\n\n  // Render the schedule data here\n  return (\n    \n    <div className=\"schedule\">\n      <ul>\n        {events.map((event) => (\n            <Event\n            id={event.id}\n            name={event.name}\n            description={event.description}\n            startTime={event.startTime}\n            endTime={event.endTime}\n            locations={event.locations}\n            date={formatDate(event.startTime)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,EAAE,CAAC;EAE9CR,KAAK,CAACS,SAAS,CAAC,MAAM;IACpB,IAAIC,GAAG,GAAG,wCAAwC;IAClDC,KAAK,CAACD,GAAG,CAAC,CACLE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MAACR,SAAS,CAACQ,IAAI,CAACT,MAAM,CAAC;IAAA,CAAC,CAAC,CACxCU,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,KAAK,CAAC;IACpD,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIX,MAAM,CAACc,MAAM,KAAK,CAAC,EAAE;IACvB,oBACEjB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBnB,OAAA;QAAAmB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC;EAEV;EACA,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAChC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;IACzC,OAAOC,IAAI,CAACE,kBAAkB,CAAC,OAAO,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,oBAEE5B,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBnB,OAAA;MAAAmB,QAAA,EACGhB,MAAM,CAAC0B,GAAG,CAAEC,KAAK,iBACd9B,OAAA,CAACF,KAAK;QACNiC,EAAE,EAAED,KAAK,CAACC,EAAG;QACbC,IAAI,EAAEF,KAAK,CAACE,IAAK;QACjBC,WAAW,EAAEH,KAAK,CAACG,WAAY;QAC/BC,SAAS,EAAEJ,KAAK,CAACI,SAAU;QAC3BC,OAAO,EAAEL,KAAK,CAACK,OAAQ;QACvBC,SAAS,EAAEN,KAAK,CAACM,SAAU;QAC3BV,IAAI,EAAEF,UAAU,CAACM,KAAK,CAACI,SAAS;MAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACrB,EAAA,CA5CuBD,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}