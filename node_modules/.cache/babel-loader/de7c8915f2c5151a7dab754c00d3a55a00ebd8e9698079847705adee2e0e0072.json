{"ast":null,"code":"var _jsxFileName = \"/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Event.js\";\nimport React from 'react';\nimport \"./Event.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Event({\n  id,\n  name,\n  description,\n  startTime,\n  endTime,\n  locations,\n  points,\n  eventType\n}) {\n  // Function to format a timestamp to 12-hour clock format with AM/PM\n  const formatTime = timestamp => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const amOrPm = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12; // Handle midnight (0) as 12 AM\n    return `${hours12}:${minutes.toString().padStart(2, '0')} ${amOrPm}`;\n  };\n\n  // Set points to 0 if it doesn't exist\n  points = points || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: formatTime(startTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: eventType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-points\",\n          children: [\"Points: \", points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"event-time\",\n          children: [formatTime(startTime), \" - \", formatTime(endTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), locations && locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"event-location\",\n        children: [\"Location \", index + 1, \": \", location.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = Event;\nvar _c;\n$RefreshReg$(_c, \"Event\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Event","id","name","description","startTime","endTime","locations","points","eventType","formatTime","timestamp","date","Date","hours","getHours","minutes","getMinutes","amOrPm","hours12","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","location","index","_c","$RefreshReg$"],"sources":["/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Event.js"],"sourcesContent":["import React from 'react';\nimport \"./Event.css\";\n\nexport default function Event({ id, name, description, startTime, endTime, locations, points, eventType }) {\n  // Function to format a timestamp to 12-hour clock format with AM/PM\n  const formatTime = (timestamp) => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const amOrPm = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 || 12; // Handle midnight (0) as 12 AM\n    return `${hours12}:${minutes.toString().padStart(2, '0')} ${amOrPm}`;\n  };\n\n  // Set points to 0 if it doesn't exist\n  points = points || 0;\n\n  return (\n    <div className=\"event-container\">\n      <div className=\"event\">\n        <div className=\"event-header\">\n          <div className=\"first-row\">\n            <h3>{formatTime(startTime)}</h3>\n            <h2>{name}</h2>\n          </div>\n          <h2>{eventType}</h2>\n          <p className=\"event-points\">\n            Points: {points}\n          </p>\n          <p className=\"event-time\">\n            {formatTime(startTime)} - {formatTime(endTime)}\n          </p>\n        </div>\n        <p className=\"event-description\">{description}</p>\n        {/* Map through locations and display descriptions */}\n        {locations &&\n          locations.map((location, index) => (\n            <p key={index} className=\"event-location\">\n              Location {index + 1}: {location.description}\n            </p>\n          ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}