{"ast":null,"code":"var _jsxFileName = \"/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Event from \"./Event.js\";\nimport \"./Schedule.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  React.useEffect(() => {\n    let url = \"https://adonix.hackillinois.org/event/\";\n    fetch(url).then(response => response.json()).then(data => {\n      setEvents(data.events);\n    }).catch(error => {\n      console.log(\"Error fetching event data:\", error);\n    });\n  }, []);\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    return date.toLocaleDateString('en-US'); // Format as MM/DD/YYYY (adjust the locale as needed)\n  };\n\n  // Generate a grid of dates for February 2023\n  // Generate a grid of dates for February 2023\n  const generateCalendar = () => {\n    const daysInMonth = new Date(2023, 1, 0).getDate(); // February 2023\n    const calendar = [];\n\n    // Add the title row as the first row of the calendar\n    calendar.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"February 2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, \"title\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this));\n    for (let day = 1; day <= daysInMonth; day++) {\n      calendar.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${selectedDate === day ? 'selected' : ''}`,\n        onClick: () => handleDateClick(day),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this));\n    }\n    return calendar;\n  };\n  const handleDateClick = day => {\n    const selectedDateString = `02/${day}/2023`; // Assuming MM/DD/YYYY format\n    setSelectedDate(selectedDateString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: generateCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(Event, {\n          id: event.id,\n          name: event.name,\n          description: event.description,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          locations: event.locations,\n          date: formatDate(event.startTime)\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-date\",\n      children: selectedDate && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Date: \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"BINMJlvEj32l3yNApQQaOzjYTSI=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","Event","jsxDEV","_jsxDEV","Schedule","_s","events","setEvents","selectedDate","setSelectedDate","useEffect","url","fetch","then","response","json","data","catch","error","console","log","formatDate","timestamp","date","Date","toLocaleDateString","generateCalendar","daysInMonth","getDate","calendar","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","day","onClick","handleDateClick","selectedDateString","map","event","id","name","description","startTime","endTime","locations","_c","$RefreshReg$"],"sources":["/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Event from \"./Event.js\";\nimport \"./Schedule.css\"\n\nexport default function Schedule() {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  React.useEffect(() => {\n    let url = \"https://adonix.hackillinois.org/event/\";\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setEvents(data.events);\n      })\n      .catch((error) => {\n        console.log(\"Error fetching event data:\", error);\n      });\n  }, []);\n\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000); // Convert to milliseconds\n    return date.toLocaleDateString('en-US'); // Format as MM/DD/YYYY (adjust the locale as needed)\n  };\n\n  // Generate a grid of dates for February 2023\n  // Generate a grid of dates for February 2023\nconst generateCalendar = () => {\n  const daysInMonth = new Date(2023, 1, 0).getDate(); // February 2023\n  const calendar = [];\n\n  // Add the title row as the first row of the calendar\n  calendar.push(\n    <div key=\"title\" className=\"calendar-title\">\n      <h2>February 2023</h2>\n    </div>\n  );\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    calendar.push(\n      <div\n        key={day}\n        className={`calendar-day ${selectedDate === day ? 'selected' : ''}`}\n        onClick={() => handleDateClick(day)}\n      >\n        {day}\n      </div>\n    );\n  }\n  return calendar;\n};\n\n\n  const handleDateClick = (day) => {\n    const selectedDateString = `02/${day}/2023`; // Assuming MM/DD/YYYY format\n    setSelectedDate(selectedDateString);\n  };\n\n  return (\n    <div className=\"schedule-container\">\n      <div className=\"calendar\">\n        {generateCalendar()}\n      </div>\n      <div className=\"schedule\">\n        <ul>\n          {events.map((event) => (\n            <Event\n              key={event.id}\n              id={event.id}\n              name={event.name}\n              description={event.description}\n              startTime={event.startTime}\n              endTime={event.endTime}\n              locations={event.locations}\n              date={formatDate(event.startTime)}\n            />\n          ))}\n        </ul>\n      </div>\n      <div className=\"selected-date\">\n        {selectedDate && <p>Selected Date: {selectedDate}</p>}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}