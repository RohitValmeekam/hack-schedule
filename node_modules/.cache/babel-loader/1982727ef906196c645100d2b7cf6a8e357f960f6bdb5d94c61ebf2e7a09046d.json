{"ast":null,"code":"var _jsxFileName = \"/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Event from './Event.js';\nimport './Schedule.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('2/24/2023');\n  useEffect(() => {\n    let url = 'https://adonix.hackillinois.org/event/';\n    fetch(url).then(response => response.json()).then(data => {\n      setEvents(data.events);\n    }).catch(error => {\n      console.log('Error fetching event data:', error);\n    });\n  }, []);\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString('en-US');\n  };\n  const generateCalendar = () => {\n    const daysInMonth = new Date(2023, 1, 0).getDate();\n    const monthName = new Date(2023, 1, 1).toLocaleDateString('en-US', {\n      month: 'long'\n    });\n    const calendar = [];\n    calendar.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-month\",\n      children: monthName\n    }, \"month\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateWithoutEvents = !events.some(event => {\n        const eventDate = formatDate(event.startTime);\n        return eventDate === `2/${day}/2023`;\n      });\n      calendar.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${selectedDate === `2/${day}/2023` ? 'selected' : ''} ${dateWithoutEvents ? 'no-events' : ''}`,\n        onClick: () => handleDateClick(day),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this));\n    }\n    return calendar;\n  };\n  const handleDateClick = day => {\n    const selectedDateString = `2/${day}/2023`;\n    setSelectedDate(selectedDateString);\n  };\n  const filteredEvents = events.filter(event => {\n    const eventDate = formatDate(event.startTime);\n    return eventDate === selectedDate;\n  }).sort((a, b) => a.startTime - b.startTime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: generateCalendar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredEvents.map(event => /*#__PURE__*/_jsxDEV(Event, {\n          id: event.id,\n          name: event.name,\n          description: event.description,\n          startTime: event.startTime,\n          endTime: event.endTime,\n          locations: event.locations,\n          points: event.points,\n          eventType: event.eventType\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Schedule, \"LNWd6290mgN0lwvuzEEjSOIsICI=\");\n_c = Schedule;\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","useEffect","Event","jsxDEV","_jsxDEV","Schedule","_s","events","setEvents","selectedDate","setSelectedDate","url","fetch","then","response","json","data","catch","error","console","log","formatDate","timestamp","date","Date","toLocaleDateString","generateCalendar","daysInMonth","getDate","monthName","month","calendar","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","day","dateWithoutEvents","some","event","eventDate","startTime","onClick","handleDateClick","selectedDateString","filteredEvents","filter","sort","a","b","map","id","name","description","endTime","locations","points","eventType","_c","$RefreshReg$"],"sources":["/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Event from './Event.js';\nimport './Schedule.css';\n\nexport default function Schedule() {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('2/24/2023');\n\n  useEffect(() => {\n    let url = 'https://adonix.hackillinois.org/event/';\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setEvents(data.events);\n      })\n      .catch((error) => {\n        console.log('Error fetching event data:', error);\n      });\n  }, []);\n\n  const formatDate = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return date.toLocaleDateString('en-US');\n  };\n\n  const generateCalendar = () => {\n    const daysInMonth = new Date(2023, 1, 0).getDate();\n    const monthName = new Date(2023, 1, 1).toLocaleDateString('en-US', { month: 'long' });\n    const calendar = [];\n\n    calendar.push(\n      <div key=\"month\" className=\"calendar-month\">\n        {monthName}\n      </div>\n    );\n\n    for (let day = 1; day <= daysInMonth; day++) {\n      const dateWithoutEvents = !events.some((event) => {\n        const eventDate = formatDate(event.startTime);\n        return eventDate === `2/${day}/2023`;\n      });\n\n      calendar.push(\n        <div\n          key={day}\n          className={`calendar-day ${selectedDate === `2/${day}/2023` ? 'selected' : ''} ${\n            dateWithoutEvents ? 'no-events' : ''\n          }`}\n          onClick={() => handleDateClick(day)}\n        >\n          {day}\n        </div>\n      );\n    }\n    return calendar;\n  };\n\n  const handleDateClick = (day) => {\n    const selectedDateString = `2/${day}/2023`;\n    setSelectedDate(selectedDateString);\n  };\n\n  const filteredEvents = events\n    .filter((event) => {\n      const eventDate = formatDate(event.startTime);\n      return eventDate === selectedDate;\n    })\n    .sort((a, b) => a.startTime - b.startTime);\n\n  return (\n    <div className=\"schedule-container\">\n      <div className=\"calendar\">\n          {generateCalendar()}\n        </div>\n      <div className=\"schedule\">\n        <ul>\n          {filteredEvents.map((event) => (\n            <Event\n              key={event.id}\n              id={event.id}\n              name={event.name}\n              description={event.description}\n              startTime={event.startTime}\n              endTime={event.endTime}\n              locations={event.locations}\n              points={event.points}\n              eventType={event.eventType}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}