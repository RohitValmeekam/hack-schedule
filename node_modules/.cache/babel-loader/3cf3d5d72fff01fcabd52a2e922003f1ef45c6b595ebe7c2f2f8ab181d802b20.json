{"ast":null,"code":"var _jsxFileName = \"/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Event from './Event.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Fetch events data here (same as before)\n\n  const handleDateClick = date => {\n    // Handle the date click event here\n    setSelectedDate(date.toLocaleDateString('en-US'));\n  };\n\n  // Render the schedule and calendar\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"February 2023\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: generateCalendarCells().map((cell, index) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: selectedDate === cell.date.toLocaleDateString('en-US') ? 'selected' : '',\n            onClick: () => handleDateClick(cell.date),\n            children: cell.date.getDate()\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n// Function to generate calendar cells for February 2023\n_s(Schedule, \"blxntrUc2mB09smjp4bAyr1bH4Q=\");\n_c = Schedule;\nfunction generateCalendarCells() {\n  const startDate = new Date(2023, 1, 1); // February is month 1 in JavaScript Date object\n  const endDate = new Date(2023, 1, 28); // February has 28 days in 2023\n\n  const calendarCells = [];\n  let currentDate = new Date(startDate);\n  while (currentDate <= endDate) {\n    calendarCells.push({\n      date: new Date(currentDate)\n    });\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n  return calendarCells;\n}\nvar _c;\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["React","useState","Event","jsxDEV","_jsxDEV","Schedule","_s","events","setEvents","selectedDate","setSelectedDate","handleDateClick","date","toLocaleDateString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","generateCalendarCells","map","cell","index","onClick","getDate","_c","startDate","Date","endDate","calendarCells","currentDate","push","setDate","$RefreshReg$"],"sources":["/Users/rohitvalmeekam/Desktop/frontend/hack-schedule/src/Components/Schedule.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Event from './Event.js';\n\nexport default function Schedule() {\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // Fetch events data here (same as before)\n\n  const handleDateClick = (date) => {\n    // Handle the date click event here\n    setSelectedDate(date.toLocaleDateString('en-US'));\n  };\n\n  // Render the schedule and calendar\n  return (\n    <div>\n      <div className=\"calendar\">\n        <h2>February 2023</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Sun</th>\n              <th>Mon</th>\n              <th>Tue</th>\n              <th>Wed</th>\n              <th>Thu</th>\n              <th>Fri</th>\n              <th>Sat</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* Generate calendar cells */}\n            {generateCalendarCells().map((cell, index) => (\n              <td\n                key={index}\n                className={selectedDate === cell.date.toLocaleDateString('en-US') ? 'selected' : ''}\n                onClick={() => handleDateClick(cell.date)}\n              >\n                {cell.date.getDate()}\n              </td>\n            ))}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"schedule\">\n        {/* Your schedule component with events */}\n      </div>\n    </div>\n  );\n}\n\n// Function to generate calendar cells for February 2023\nfunction generateCalendarCells() {\n  const startDate = new Date(2023, 1, 1); // February is month 1 in JavaScript Date object\n  const endDate = new Date(2023, 1, 28); // February has 28 days in 2023\n\n  const calendarCells = [];\n  let currentDate = new Date(startDate);\n\n  while (currentDate <= endDate) {\n    calendarCells.push({ date: new Date(currentDate) });\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  return calendarCells;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}